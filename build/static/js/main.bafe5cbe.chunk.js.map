{"version":3,"sources":["components/ThirstySearch.js","components/HungrySearch.js","components/Timer.js","components/Game.js","components/RandomGIF.js","App.js","index.js"],"names":["ThirstySearch","props","state","value","luckyPressed","resultOfPress","handleChange","bind","handleStarvingPress","handleFirstDatePress","handleSearchPress","handleCancelPress","event","this","setState","target","a","filteredCheapPlaces","axios","method","url","data","then","res","console","log","message","filter","r","price","map","place","i","onClick","window","open","website","name","catch","err","error","response","filteredExpensivePlaces","rating","buttons","className","type","onChange","onKeyPress","key","preventDefault","React","Component","HungrySearch","Timer","timer","over","startTimer","countDown","setInterval","style","fontSize","fontWeight","Game","score","answer","round","gameRounds","question","color","answers","up","down","left","right","handleArrowKeyPress","document","addEventListener","e","backgroundColor","height","width","RandomGIF","gif","loading","process","fetch","json","embed_url","title","src","App","loginPressed","thirstyPressed","gamePressed","darkMode","ls","get","handleLoginPress","handleGamePress","handleThirstyPress","handleDarkModePress","body","classList","add","remove","zoom","toggle","set","searchComponent","id","rel","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bafe5cbe.chunk.js","sourcesContent":["// API calls for search bar\nimport React from 'react';\nimport axios from 'axios';\n\nexport default class ThirstySearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"Thirsty? Get drinkin\",\n      luckyPressed: false,\n      resultOfPress: \"Loading...\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStarvingPress = this.handleStarvingPress.bind(this);\n    this.handleFirstDatePress = this.handleFirstDatePress.bind(this);\n    this.handleSearchPress = this.handleSearchPress.bind(this);\n    this.handleCancelPress = this.handleCancelPress.bind(this);\n  }\n\n  // updates search bar\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  // Calls API from server; sets state of starving press to true; filter down results to cheap places\n  // and then sets state of pressResult to html formatted result\n  async handleStarvingPress() {\n    let filteredCheapPlaces = [];\n    this.setState({ luckyPressed: true });\n    // API GET call to CHEAP fast food restaurats\n    const result = await axios({\n      method: 'post',\n      url: `/barSearch`,\n      data: this.state.value\n    }).then((res) => {\n      console.log(res.data.message);\n      filteredCheapPlaces = res.data.message.filter((r) => r.price === \"$\");\n      // set state of press result\n      this.setState({ resultOfPress: filteredCheapPlaces.map((place, i) => <span key={place.name + i} onClick={() => window.open(place.website, place.name)} >{place.name}</span>) });\n    }).catch((err) => {\n      console.error(err.response.data);\n    });\n  }\n\n  async handleFirstDatePress() {\n    let filteredExpensivePlaces = [];\n    this.setState({ luckyPressed: true });\n    // API GET call to EXPENSIVE, HIGH RATED restaurants\n    const result = await axios({\n      method: 'post',\n      url: `/barSearch`,\n      data: this.state.value\n    }).then((res) => {\n      console.log(res.data.message);\n      filteredExpensivePlaces = res.data.message.filter((r) => r.rating >= 4);\n      this.setState({ resultOfPress: filteredExpensivePlaces.map((place, i) => <span key={place.name + i} onClick={() => window.open(place.website, place.name)}>{place.name}</span>) });\n    }).catch((err) => {\n      console.error(err.response.data);\n    });\n  }\n\n  async handleSearchPress() {\n    this.setState({ luckyPressed: true });\n    // API GET call to EXPENSIVE, HIGH RATED restaurants\n    const result = await axios({\n      method: 'post',\n      url: `/barSearch`,\n      data: this.state.value\n    }).then((res) => {\n      console.log(res.data.message);\n      this.setState({ resultOfPress: res.data.message.map((place, i) => <span key={place.name + i} onClick={() => window.open(place.website, place.name)}>{place.name}</span>) });\n    }).catch((err) => {\n      console.error(err.response.data);\n    });\n  }\n\n  async handleCancelPress() {\n    this.setState({\n      value: \"Try another search...\",\n      luckyPressed: false,\n      resultOfPress: \"Loading...\",\n    });\n  }\n\n  render() {\n    const buttons = <div className=\"luckyButtons\">\n      <div className=\"starving\">\n        <button className=\"starvingButton\" onClick={this.handleStarvingPress}>I'm Dried Out</button>\n      </div>\n      <div className=\"firstDate\">\n        <button className=\"firstDateButton\" onClick={this.handleFirstDatePress}>It's My 21st</button>\n      </div>\n      <div className=\"search\">\n        <button className=\"searchButton\" onClick={this.handleSearchPress}>→</button>\n      </div>\n    </div>\n\n    return <div className=\"HungrySearch\">\n      <div className=\"mainTitle\">\n        <h1 className=\"titleText\">So, You're Thirsty?</h1>\n        <form>\n          <label>\n            <input className=\"searchBarInput\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.value}\n              onKeyPress={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  this.handleSearchPress();\n                }\n              }}\n            />\n          </label>\n        </form>\n      </div>\n      {!this.state.luckyPressed ? buttons : <div className=\"searchResults\">{this.state.resultOfPress}</div>}\n      {!this.state.luckyPressed ? \"\" : <button className=\"cancelButton\" onClick={this.handleCancelPress}>Cancel</button>}\n    </div>\n  }\n}","// API calls for search bar\nimport React from 'react';\nimport axios from 'axios';\n\nexport default class HungrySearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"Hungry? Get snackin\",\n      luckyPressed: false,\n      resultOfPress: \"Loading...\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStarvingPress = this.handleStarvingPress.bind(this);\n    this.handleFirstDatePress = this.handleFirstDatePress.bind(this);\n    this.handleSearchPress = this.handleSearchPress.bind(this);\n    this.handleCancelPress = this.handleCancelPress.bind(this);\n  }\n\n  // updates search bar\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  // Calls API from server; sets state of starving press to true; filter down results to cheap places\n  // and then sets state of pressResult to html formatted result\n  async handleStarvingPress() {\n    let filteredCheapPlaces = [];\n    this.setState({ luckyPressed: true });\n    // API GET call to CHEAP fast food restaurats\n    const result = await axios({\n      method: 'post',\n      url: `/search`,\n      data: this.state.value\n    }).then((res) => {\n      console.log(res.data.message);\n      filteredCheapPlaces = res.data.message.filter((r) => r.price === \"$\");\n      console.log(\"Filtered cheap \" + filteredCheapPlaces);\n\n      // set state of press result\n      this.setState({ resultOfPress: filteredCheapPlaces.map((place, i) => <span key={place.name + i} onClick={() => window.open(place.website, place.name)} >{place.name}</span>) });\n    }).catch((err) => {\n      console.error(err.response.data);\n    });\n  }\n\n  async handleFirstDatePress() {\n    let filteredExpensivePlaces = [];\n    this.setState({ luckyPressed: true });\n    // API GET call to EXPENSIVE, HIGH RATED restaurants\n    const result = await axios({\n      method: 'post',\n      url: `/search`,\n      data: this.state.value\n    }).then((res) => {\n      console.log(res.data.message);\n      filteredExpensivePlaces = res.data.message.filter((r) => r.rating >= 4);\n      console.log(\"Fitlered fancy \" + filteredExpensivePlaces);\n\n      this.setState({ resultOfPress: filteredExpensivePlaces.map((place, i) => <span key={place.name + i} onClick={() => window.open(place.website, place.name)}>{place.name}</span>) });\n    }).catch((err) => {\n      console.error(err.response.data);\n    });\n  }\n\n  async handleSearchPress() {\n    this.setState({ luckyPressed: true });\n    // API GET call to EXPENSIVE, HIGH RATED restaurants\n    const result = await axios({\n      method: 'post',\n      url: `/search`,\n      data: this.state.value\n    }).then((res) => {\n      console.log(res.data.message);\n      this.setState({ resultOfPress: res.data.message.map((place, i) => <span key={place.name + i} onClick={() => window.open(place.website, place.name)}>{place.name}</span>) });\n    }).catch((err) => {\n      console.error(err.response.data);\n    });\n  }\n\n  async handleCancelPress() {\n    this.setState({\n      value: \"Try another search...\",\n      luckyPressed: false,\n      resultOfPress: \"Loading...\",\n    });\n  }\n\n  render() {\n    const buttons = <div className=\"luckyButtons\">\n      <div className=\"starving\">\n        <button className=\"starvingButton\" onClick={this.handleStarvingPress}>I'm Starving</button>\n      </div>\n      <div className=\"firstDate\">\n        <button className=\"firstDateButton\" onClick={this.handleFirstDatePress}>I Have a First Date</button>\n      </div>\n      <div className=\"search\">\n        <button className=\"searchButton\" onClick={this.handleSearchPress}>→</button>\n      </div>\n    </div>\n\n    return <div className=\"HungrySearch\">\n      <div className=\"mainTitle\">\n        <h1 className=\"titleText\">So, You're Hungry?</h1>\n        <form>\n          <label>\n            <input className=\"searchBarInput\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.value}\n              onKeyPress={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  this.handleSearchPress();\n                }\n              }}\n            />\n          </label>\n        </form>\n      </div>\n      {!this.state.luckyPressed ? buttons : <div className=\"searchResults\">{this.state.resultOfPress}</div>}\n      {!this.state.luckyPressed ? \"\" : <button className=\"cancelButton\" onClick={this.handleCancelPress}>Cancel</button>}\n    </div>\n  }\n}","// API calls for search bar\nimport React from 'react';\n\nexport default class Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timer: 60, // Counts down from 60 seconds\n            over: false, // True when timer runs out\n        };\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    startTimer() {\n        setInterval(this.countDown, 1000);\n    };\n\n    countDown() {\n        if (this.state.timer === 0) {\n            this.setState({ timer: 0 })\n        }\n        else {\n            this.setState({\n                timer: this.state.timer - 1,\n            });\n        }\n    }\n\n    render() {\n\n        return (this.state.timer !== 0) ? <div>\n            <div className=\"timer\"> <h1> Time: {this.state.timer} </h1> </div>\n            <div className=\"instructions\">\n                <h1> Use the arrows to choose the correct color swab. Correct answers get a point. Answer incorrectly and you lose a point. You've got one minute! </h1>\n                <button className=\"timerButton\" onClick={this.startTimer}>Start Timer</button>\n            </div>\n        </div> : <div className=\"instructions\"> <h1 style={{fontSize: \"100px\", fontWeight: \"bolder\"}}> GAME OVER! </h1> </div>\n    }\n}","// API calls for search bar\nimport React from 'react';\nimport Timer from './Timer.js';\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // timer: \"60\", // Counts down from 60 seconds\n            // over: false, // True when timer runs out\n            score: 0,\n            answer: \"\", // Set to chosen answer from up, down, left, right\n            // up: \"red\", // Top color swab answer option\n            // down: \"green\", // Bottom color swab answer option\n            // left: \"blue\", // Left color swab answer option\n            // right: \"yellow\", // Right color swab answer option\n            round: 0, // iterates through gameRounds\n            // hard coded questions and options with changing correct answers from render()\n            gameRounds: [{ question: \"Choose the color of the following word's text: \", type: \"color\", color: \"blue\",answers: {up: \"red\",down: \"green\",left: \"blue\",right: \"yellow\",}},\n                {question: \"Choose the color the following word describes: \", type: \"meaning\", color: \"blue\",answers: {up: \"blue\",down: \"green\",left: \"red\",right: \"yellow\",}},\n                {question: \"Choose the color of the following word's text: \", type: \"color\", color: \"purple\",answers: {up: \"green\",down: \"purple\",left: \"blue\",right: \"yellow\",}},\n                {question: \"Choose the color the following word describes: \",  type: \"meaning\", color: \"yellow\",answers: {up: \"red\",down: \"green\",left: \"blue\",right: \"yellow\", }},\n                {question: \"Choose the color the following word describes: \",  type: \"meaning\", color: \"orange\",answers: {up: \"green\",down: \"orange\",left: \"red\",right: \"pink\",}},\n                {question: \"Choose the color of the following word's text: \",  type: \"color\", color: \"brown\",answers: {up: \"brown\",down: \"red\",left: \"yellow\",right: \"green\",}},\n                {question: \"Choose the color the following word describes: \",  type: \"meaning\", color: \"blue\",answers: {up: \"blue\",down: \"red\",left: \"purple\",right: \"orange\",}},\n                {question: \"Choose the color the following word describes: \",  type: \"meaning\", color: \"yellow\",answers: {up: \"blue\",down: \"red\",left: \"green\",right: \"yellow\",}},\n                {question: \"Choose the color of the following word's text: \",  type: \"color\", color: \"pink\",answers: {up: \"pink\",down: \"orange\",left: \"yellow\",right: \"brown\",}},\n                {question: \"Choose the color the following word describes: \",  type: \"meaning\", color: \"purple\",answers: {up: \"pink\",down: \"purple\",left: \"red\",right: \"blue\",}}\n            ]\n        };\n        this.handleArrowKeyPress = this.handleArrowKeyPress.bind(this);\n    }\n\n    componentDidMount() {\n        // bind keypress to window\n        document.addEventListener(\"keydown\", e => {\n            this.handleArrowKeyPress(e);\n        });\n\n        // this.setState({\n        //     up: this.state.gameRounds[this.state.round].answers.up,\n        //     down: this.state.gameRounds[this.state.round].answers.down,\n        //     left: this.state.gameRounds[this.state.round].answers.left,\n        //     right: this.state.gameRounds[this.state.round].answers.right\n        // });\n\n        // // Determine answer based on question type\n        // if (this.state.gameRounds[this.state.round].type === \"meaning\") {\n        //     this.setState({ answer: this.state.gameRounds[this.state.round].color });\n        // } else if (this.state.gameRounds[this.state.round].type === \"color\") {\n        //     this.setState({ answer: this.state.gameRounds[this.state.round].answers.up  });\n        // };\n\n        // this.setState({ round: this.state.round + 1})\n    }\n\n\n    handleArrowKeyPress(event) {\n        event.preventDefault();\n        if (event.key === 'ArrowUp') this.setState({ answer: this.state.gameRounds[this.state.round].answers.up });\n        if (event.key === 'ArrowDown') this.setState({ answer: this.state.gameRounds[this.state.round].answers.down });\n        if (event.key === 'ArrowRight') this.setState({ answer: this.state.gameRounds[this.state.round].answers.right });\n        if (event.key === 'ArrowLeft') this.setState({ answer: this.state.gameRounds[this.state.round].answers.left });\n\n        // Calculate score change from current round\n        if (((this.state.answer === this.state.gameRounds[this.state.round].color)&&this.state.gameRounds[this.state.round].type===\"meaning\") \n            || ((this.state.answer === this.state.gameRounds[this.state.round].answers.up)&&this.state.gameRounds[this.state.round].type===\"color\")) {\n            this.setState({ score: this.state.score + 1 });\n        } else {\n            this.setState({ score: this.state.score - 1 });\n        }\n\n        // Iterate through rounds\n        if (this.state.round < 9) { \n            this.setState({ round: this.state.round + 1 }); \n        } else { \n            this.setState({ round: 0 }); \n        }\n\n    }\n\n    render() {\n        return <div className=\"game\">\n            <div className=\"score\"> <h1> Score: {this.state.score} </h1> </div>\n            <Timer />\n            <div className=\"gameQuestion\"> {this.state.gameRounds[this.state.round].question} </div>\n            <div className=\"color\" style={{ color: this.state.gameRounds[this.state.round].answers.up }}> \n                {this.state.gameRounds[this.state.round].color}\n            </div>\n            <div className=\"answerChoices\">\n                <div className=\"up\">\n                    <span style={{\n                        backgroundColor: this.state.gameRounds[this.state.round].answers.up,\n                        height: \"200px\",\n                        width: \"200px\"\n                    }}>Up</span>\n                </div>\n                <div className=\"down\">\n                    <span style={{\n                        backgroundColor: this.state.gameRounds[this.state.round].answers.down,\n                        height: \"200px\",\n                        width: \"200px\"\n                    }}>Down</span>\n                </div>\n                <div className=\"left\">\n                    <span style={{\n                        backgroundColor: this.state.gameRounds[this.state.round].answers.left,\n                        height: \"200px\",\n                        width: \"200px\"\n                    }}>Left</span>\n                </div>\n                <div className=\"right\">\n                    <span style={{\n                        backgroundColor: this.state.gameRounds[this.state.round].answers.right,\n                        height: \"200px\",\n                        width: \"200px\"\n                    }}>Right</span>\n                </div>\n            </div>\n        </div>\n    }\n}","// API calls for search bar\nimport React from 'react';\nimport axios from 'axios';\n\nexport default class RandomGIF extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gif: \"\",\n            loading: true\n        };\n\n    }\n\n    async componentDidMount() {\n        const api_key = process.env.REACT_APP_GIF_API_KEY\n        if (this.state.loading) {fetch(`https://api.giphy.com/v1/gifs/random?api_key=${api_key}&tag=\"foodporn\"`, {method: \"GET\", rating: \"g\"})\n            .then(r => {\n                return r.json();\n            }).then(r => {\n                console.log(r.data.embed_url);\n                this.setState({\n                    loading: false,\n                    gif: r.data.embed_url\n                })\n            });}\n    }\n\n    render() {\n        return <div className=\"gif\"><iframe title=\"foodgif\" src={this.state.gif} style={{height: \"300px\", width: \"600px\"}}></iframe></div>\n    }\n}","import './App.css';\nimport React from 'react';\nimport ThirstySearch from './components/ThirstySearch.js';\nimport HungrySearch from './components/HungrySearch.js';\nimport Game from './components/Game.js';\nimport RandomGIF from './components/RandomGIF.js';\nimport ls from 'local-storage';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginPressed: false,\n      thirstyPressed: false,\n      gamePressed: false,\n      darkMode: ls.get(\"darkMode\")\n    };\n    // this.handleChange = this.handleChange.bind(this);\n    this.handleLoginPress = this.handleLoginPress.bind(this);\n    this.handleGamePress = this.handleGamePress.bind(this);\n    this.handleThirstyPress = this.handleThirstyPress.bind(this);\n    this.handleDarkModePress = this.handleDarkModePress.bind(this);\n  }\n\n  componentDidMount() {\n    this.state.darkMode ? document.body.classList.add(\"dark-mode\") : document.body.classList.remove(\"dark-mode\");\n    document.body.style.zoom = 0.5;\n  }\n\n  handleDarkModePress() {\n    document.body.classList.toggle(\"dark-mode\");\n    ls.set(\"darkMode\", !this.state.darkMode)\n    this.setState({\n      darkMode: !ls.get(\"darkMode\") ? false : ls.get(\"darkMode\")\n    });\n  }\n\n  handleLoginPress() {\n    this.setState({\n      thirstyPressed: false,\n      loginPressed: !this.state.loginPressed,\n      gamePressed: false\n    });\n    // API search query\n  }\n\n  handleThirstyPress() {\n    this.setState({\n      thirstyPressed: !this.state.thirstyPressed,\n      loginPressed: false,\n      gamePressed: false\n    });\n    // Switch template to Drink API\n  }\n\n  handleGamePress() {\n    this.setState({\n      thirstyPressed: false,\n      loginPressed: false,\n      gamePressed: !this.state.gamePressed\n    });\n  }\n  // Switch to Game\n\n\n\n  render() {\n    const searchComponent = <div className=\"searchBar\" id=\"searchBar\">\n                              {this.state.thirstyPressed ? <ThirstySearch /> : <HungrySearch />}\n                            </div>\n\n    return <div className=\"App\">\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Quicksand\" />\n      {this.state.gamePressed ? <Game /> : searchComponent}\n      <div className=\"thirsty\">\n        <button className=\"thirstyButton\" onClick={this.handleThirstyPress}> {this.state.thirstyPressed ? \"I'm Hungry\" : \"I'm Thirsty\"} </button>\n      </div>\n      <div className=\"loginExpansion\">\n        <button className=\"loginExpansionButton\" onClick={this.handleLoginPress}> {!this.state.loginPressed ? \"Can't Decide What to Eat?\" : <RandomGIF />} </button>\n      </div>\n      <div className=\"game\">\n        <button className=\"gameButton\" onClick={this.handleGamePress}>{!this.state.gamePressed ? \"Waiting for an open table?\" : \"Click to Exit Game\"}</button>\n      </div>\n      <div className=\"darkMode\">\n        <button className=\"darkModeButton\" onClick={this.handleDarkModePress}>{!this.state.darkMode ? \"Dark Mode\" : \"Light Mode\"}</button>\n      </div>\n    </div>\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}